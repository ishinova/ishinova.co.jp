name: Release Please

on:
  workflow_dispatch:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write
  issues: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: false

jobs:
  validate:
    runs-on: ubuntu-24.04-arm
    outputs:
      new-version: ${{ steps.resolve-versions.outputs.new-version }}
      notes: ${{ steps.generate_notes.outputs.body }}
      action: ${{ steps.determine_action.outputs.result }}
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Create GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Get new version
        id: resolve-versions
        uses: ./.github/actions/resolve-versions
        with:
          github-token: ${{ steps.app-token.outputs.token }}

      - name: Generate release notes
        id: generate_notes
        uses: ./.github/actions/generate-release-note-body
        with:
          version: ${{ steps.resolve-versions.outputs.new-version }}
          github-token: ${{ steps.app-token.outputs.token }}

      - name: Check manifest file
        run: |
          if [ ! -f .github/release-please-manifest.json ]; then
            echo "::error::Release manifest file not found at .github/release-please-manifest.json"
            exit 1
          fi
          echo "âœ… Release manifest file found"

      - name: Determine action
        id: determine_action
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        with:
          result-encoding: string
          script: |
            const { eventName, payload } = context;
            if (eventName !== 'pull_request' && payload.head_commit && payload.head_commit.message.includes('workflows/release')) {
              return 'none';
            }
            if (eventName === 'pull_request') {
              return 'update';
            }
            const version = '${{ steps.resolve-versions.outputs.new-version }}';
            const releaseBranch = `workflows/release/v${version}`;
            const { data: prs } = await github.rest.pulls.list({
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: 'open',
              head: `${context.repo.owner}:${releaseBranch}`,
            });
            return prs.length > 0 ? 'update' : 'create';

  create-pr:
    needs: validate
    if: ${{ needs.validate.outputs.action == 'create' }}
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Create GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Create Release PR
        id: create_pr
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          RELEASE_VERSION: ${{ needs.validate.outputs.new-version }}
          RELEASE_NOTES: ${{ needs.validate.outputs.notes }}
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          result-encoding: string
          script: |
            const createReleasePr = require('./.github/scripts/release-pr-create.cjs');
            return await createReleasePr({
              github,
              context,
              version: process.env.RELEASE_VERSION,
              notes: process.env.RELEASE_NOTES
            });

      - name: Display PR URL
        run: |
          echo "Pull Request URL: ${{ steps.create_pr.outputs.result }}"

  update-pr:
    needs: validate
    if: ${{ needs.validate.outputs.action == 'update' }}
    runs-on: ubuntu-24.04-arm
    timeout-minutes: 15
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: Create GitHub App Token
        id: app-token
        uses: actions/create-github-app-token@df432ceedc7162793a195dd1713ff69aefc7379e # v2.0.6
        with:
          app-id: ${{ vars.BOT_APP_ID }}
          private-key: ${{ secrets.BOT_PRIVATE_KEY }}

      - name: Update Release PR
        id: update_pr
        uses: actions/github-script@60a0d83039c74a4aee543508d2ffcb1c3799cdea # v7.0.1
        env:
          RELEASE_VERSION: ${{ needs.validate.outputs.new-version }}
          RELEASE_NOTES: ${{ needs.validate.outputs.notes }}
        with:
          github-token: ${{ steps.app-token.outputs.token }}
          result-encoding: string
          script: |
            const updateReleasePr = require('./.github/scripts/release-pr-update.cjs');
            return await updateReleasePr({
              github,
              context,
              version: process.env.RELEASE_VERSION,
              notes: process.env.RELEASE_NOTES
            });

      - name: Display PR URL
        run: |
          echo "Pull Request URL: ${{ steps.update_pr.outputs.result }}"
